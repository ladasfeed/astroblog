---
import i18next, { t } from "i18next";
import RuIcon from "@assets/ru-icon.png";
import EnIcon from "@assets/en-icon.png";
import * as i18n from "astro-i18next"; // function available with `manual` routing

const LANGUAGE_TO_ICON_MAP = {
  en: EnIcon.src,
  ru: RuIcon.src,
};

const defaultLocale = i18n.AstroI18next.config.defaultLocale;
const icons = Object.entries(LANGUAGE_TO_ICON_MAP);
const icon = LANGUAGE_TO_ICON_MAP[i18next.language];

console.log(i18next.language);
---

<div class="container">
  <div>
    <img
      data-open-switch-lang
      class="lang-icon"
      id="languageSwitcher"
      width="36"
      src={icon}
      alt="language switcher"
    />
  </div>
  <div
    data-lang-dropdown
    class="dropdown p-[8px] rounded-[6px] bg-blue-light dark:bg-blue-dark"
  >
    {
      icons.map(([langKey, icon]) => (
        <img
          class="lang-icon"
          data-switch-lang={langKey}
          id="languageSwitcher"
          width="36"
          src={icon}
          alt="language switcher"
        />
      ))
    }
  </div>
</div>

<style>
  .container {
    position: relative;
  }

  .lang-icon {
    cursor: pointer;
  }

  .dropdown {
    display: flex;
    position: absolute;
    left: -8px;
    top: calc(100% + 8px);
    opacity: 0;
    width: calc(100% + 16px);
    justify-content: center;
    align-items: center;
    flex-direction: column;
    pointer-events: none;
    transition: 0.4s;
    transform: rotateY(90deg);
    gap: 8px;
  }
  .dropdown.open {
    opacity: 1;
    transform: rotateY(0deg);
    pointer-events: all;
  }
</style>

<script is:inline define:vars={{ lang: i18next.language, defaultLocale }}>
  const init = () => {
    const openSwitchLang = document.querySelector("[data-open-switch-lang]");
    const switcherNode = document.querySelectorAll("[data-switch-lang]");
    const languageDropdown = document.querySelector("[data-lang-dropdown]");

    openSwitchLang.addEventListener("click", () => {
      languageDropdown.classList.toggle("open");
    });

    const currentUrlWithoutLang = `${document.location.pathname.replace(`/${lang}`, "")}${document.location.search}`;

    console.log(currentUrlWithoutLang, "currentUrlWithoutLang");
    console.log(languageDropdown, "languageDropdown");
    switcherNode.forEach((el) =>
      el.addEventListener("click", (e) => {
        const langToSwitch = e.target.dataset.switchLang;

        if (langToSwitch === lang) return;

        const urlToRedirect =
          langToSwitch === defaultLocale
            ? currentUrlWithoutLang
            : `${langToSwitch}${currentUrlWithoutLang}`;

        console.log(urlToRedirect, "urlToRedirect");

        document.location.pathname = urlToRedirect;
      })
    );
  };

  init();

  document.addEventListener("astro:after-swap", () => {
    console.log("???");
    init();
  });
</script>

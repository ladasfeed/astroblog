---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE } from "../consts";
import ThemeIcon from "./ThemeIcon.astro";
import LanguageSwitcher from "./LanguageSwitcher.astro";
import BackButton from "@assets/icons/back.svg?raw";
import { getRouter } from "src/routes";
import i18n from "i18next";

const TAGS = ["frontend", "traveling", "css"];

const router = getRouter(i18n.language);

interface Props {
  shouldShowBackButton?: boolean;
}

const {shouldShowBackButton} = Astro.props

---

<header
  class="section-container bg-white dark:bg-dark flex justify-between shadow-md"
>
  <span class="text-accent text-[36px] sm:text-[24px] font-secondary font-black">
    <HeaderLink href={router.home}>{SITE_TITLE}</HeaderLink>
  </span>

  <div class="right flex gap-[36px] items-center">
    <div class="system-settings flex gap-[16px] items-center">
      <a href={router.blog.root}>
        <svg width="30" height="30" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
          <g clip-path="url(#clip0_6_12270)">
          <path d="M15.5 14H14.71L14.43 13.73C15.41 12.59 16 11.11 16 9.5C16 5.91 13.09 3 9.5 3C5.91 3 3 5.91 3 9.5C3 13.09 5.91 16 9.5 16C11.11 16 12.59 15.41 13.73 14.43L14 14.71V15.5L19 20.49L20.49 19L15.5 14ZM9.5 14C7.01 14 5 11.99 5 9.5C5 7.01 7.01 5 9.5 5C11.99 5 14 7.01 14 9.5C14 11.99 11.99 14 9.5 14Z" fill="currentColor"/>
          </g>
          <defs>
          <clipPath id="clip0_6_12270">
          <rect width="24" height="24" fill="white"/>
          </clipPath>
          </defs>
        </svg>
      </a>
      <a href="https://github.com/ladasfeed" target="_blank">
        <svg viewBox="0 0 16 16" aria-hidden="true" width="28" height="28" astro-icon="social/github"
          ><path
            fill="currentColor"
            d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"
          ></path></svg
        >
      </a>
      <LanguageSwitcher />
      <ThemeIcon />
      {shouldShowBackButton && <span  class="back-button"><Fragment set:html={BackButton} /></span>}
    </div>
  </div>
</header>
<style lang="scss">
  header {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 10;
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    height: var(--header-height);
    transition: transform .3s;
    transition-timing-function: ease-in-out;

    @include bpMobile {
      padding: 12px;
    }
  }

  nav {
    width: 100%;
  }

  .tags {
    @include bpMobile {
      display: none;
    }
  }

  .back-button :global(svg) {
    width: 28px;
    height: 28px;
    color: black;
   
    @include bpMobile {
      width: 28px;
      height: 28px;
    }
  }
  
  :global(.dark) .back-button :global(svg) {
    color: white;
  }

</style>

<script is:inline >
  {
    const init = () => {
      const root = document.querySelector(':root');
      const backButton = document.querySelector('.back-button');
      if (backButton) {
        backButton.addEventListener('click', () => { 
          window.history.back();
        })
      } 


      // 
      const headerNode = document.querySelector('header');
      let hasInitScrollHappened = false;

      setTimeout(() => {
        hasInitScrollHappened = true;
      }, 500)

      let lastScrollTop = null;
      document.addEventListener('scroll', () => {
        if (!hasInitScrollHappened) {
          lastScrollTop = window.scrollY;
          return;
        };

        if (window.scrollY > lastScrollTop) {
          headerNode.style.transform = 'translateY(-100%)';
          root.style.setProperty('--header-collapsed', 1);
        } else {
          headerNode.style.transform = '';
          root.style.setProperty('--header-collapsed', 0);
        }

        lastScrollTop = window.scrollY;
      })
    }

    document.addEventListener("astro:after-swap", () => {
      init()  
    });

    init()
  }
 
</script>

